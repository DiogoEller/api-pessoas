package br.com.apiPessoas.bean;

import java.util.List;

import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.component.UIComponent;
import javax.faces.context.FacesContext;
import javax.faces.validator.ValidatorException;
import javax.persistence.EntityManager;
import javax.persistence.NoResultException;
import javax.persistence.Query;
import javax.persistence.TypedQuery;

import br.com.apiPessoas.dao.DAO;
import br.com.apiPessoas.dao.JPAUtil;
import br.com.apiPessoas.modelo.Pessoa;
import br.com.apiPessoas.modelo.Usuario;

@ManagedBean
public class PessoaBean {

	private Pessoa pessoa = new Pessoa();

	public Pessoa getPessoa() {
		return pessoa;
	}
	
	public List<Pessoa> getPessoas() {
		return new DAO<Pessoa>(Pessoa.class).listaTodos();
	}

	public void gravar() {
		System.out.println("Gravando pessoa " + this.pessoa.getNome());

		if (validaCPF(this.pessoa.getCpf())) {
			throw new ValidatorException(new FacesMessage("CPF j√° existe no sistema"));
		} else {
			if (this.pessoa.getId() == null) {
				new DAO<Pessoa>(Pessoa.class).adiciona(this.pessoa);
			} else {
				new DAO<Pessoa>(Pessoa.class).atualiza(this.pessoa);
			}
			this.pessoa = new Pessoa();
		}
	}

	public boolean validaCPF(String cpf) {
		
		EntityManager em = new JPAUtil().getEntityManager();
		TypedQuery<Usuario> query = em.createQuery("select p "
				+ "from Pessoa p "
				+ "where cpf = :pCpf", Usuario.class);
		
		query.setParameter("pCpf", cpf);
		
		try {
			Usuario resultado = query.getSingleResult();			
		} catch (NoResultException ex) {
			return false;
		}
	}
	
	public void remover(Pessoa pessoa) {
		System.out.println("Removendo pessoa " + this.pessoa.getNome());
		new DAO<Pessoa>(Pessoa.class).remove(pessoa);
	}
	
	public void carregar(Pessoa pessoa) {
		System.out.println("Removendo pessoa " + this.pessoa.getNome());
		this.pessoa = pessoa;
	}
}
